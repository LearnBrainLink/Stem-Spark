(()=>{var e={};e.id=4581,e.ids=[1725,4581],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},19901:(e,r,s)=>{"use strict";s.d(r,{Ay:()=>i,uO:()=>n});var t=s(78286);async function n(e){try{let e=(0,t.createClient)(),{data:{user:r},error:s}=await e.auth.getUser();if(s||!r)return{error:"Unauthorized",status:401};let{data:n,error:a}=await e.from("profiles").select("role, is_super_admin").eq("id",r.id).single();if(a||!n)return{error:"Profile not found",status:404};if("admin"!==n.role&&!n.is_super_admin)return{error:"Admin access required",status:403};return{user:r,profile:n,error:null}}catch(e){return{error:"Internal server error",status:500}}}s(85454);class a{async getAdminActionLogs(e=100){try{let{data:r,error:s}=await this.supabase.from("admin_actions_log").select(`
          *,
          performed_by:profiles!admin_actions_log_performed_by_fkey(full_name, email),
          target_user:profiles!admin_actions_log_target_user_id_fkey(full_name, email)
        `).order("created_at",{ascending:!1}).limit(e);if(s)throw s;return r||[]}catch(e){throw console.error("Error fetching admin action logs:",e),e}}async logAdminAction(e,r,s,t,n=!0,a){try{let{error:i}=await this.supabase.from("admin_actions_log").insert({action_type:e,performed_by:r,target_user_id:s,metadata:t,is_allowed:n,reason:a});if(i)throw i}catch(e){throw console.error("Error logging admin action:",e),e}}async validateAdminAccess(e){try{let{data:r,error:s}=await this.supabase.from("profiles").select("role, is_super_admin").eq("id",e).single();if(s||!r)return{isValid:!1,reason:"Profile not found"};if("admin"!==r.role&&!r.is_super_admin)return{isValid:!1,reason:"Admin access required"};return{isValid:!0,profile:r}}catch(e){return console.error("Error validating admin access:",e),{isValid:!1,reason:"Error validating access"}}}async canEditUser(e,r){try{let{data:s,error:t}=await this.supabase.from("profiles").select("role, is_super_admin").eq("id",e).single();if(t||!s)return{canEdit:!1,reason:"Current user not found"};if("admin"!==s.role&&!s.is_super_admin)return{canEdit:!1,reason:"Insufficient permissions"};if(e===r)return{canEdit:!0};let{data:n,error:a}=await this.supabase.from("profiles").select("role, is_super_admin").eq("id",r).single();if(a||!n)return{canEdit:!1,reason:"Target user not found"};if(s.is_super_admin)return{canEdit:!0};if("admin"===n.role||n.is_super_admin)return{canEdit:!1,reason:"Cannot edit other administrators"};return{canEdit:!0}}catch(e){return console.error("Error checking admin edit permissions:",e),{canEdit:!1,reason:"Error checking permissions"}}}constructor(){this.supabase=(0,t.createClient)()}}let i=a},26889:(e,r,s)=>{"use strict";s.r(r),s.d(r,{patchFetch:()=>f,routeModule:()=>h,serverHooks:()=>p,workAsyncStorage:()=>_,workUnitAsyncStorage:()=>m});var t={};s.r(t),s.d(t,{POST:()=>d});var n=s(59743),a=s(23112),i=s(2567),c=s(85454),o=s(73205),l=s(19901);class u{constructor(){this.supabase=(0,o.createClient)(process.env.NEXT_PUBLIC_SUPABASE_URL,process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY),this.adminProtection=new l.Ay}async createChannel(e){try{if("announcement"===e.channel_type&&console.log("Announcement channel creation attempted by:",e.created_by),!e.name.trim())return{success:!1,error:"Channel name is required"};let{data:r}=await this.supabase.from("chat_channels").select("id").eq("name",e.name).single();if(r)return{success:!1,error:"Channel name already exists"};let{data:s,error:t}=await this.supabase.from("chat_channels").insert({name:e.name,description:e.description,channel_type:e.channel_type||"general",created_by:e.created_by}).select().single();if(t)return console.error("Error creating channel:",t),{success:!1,error:"Failed to create channel"};return await this.supabase.from("chat_channel_members").insert({channel_id:s.id,user_id:e.created_by,role:"admin",joined_at:new Date().toISOString()}),{success:!0,data:s}}catch(e){return console.error("Error in createChannel:",e),{success:!1,error:"Internal server error"}}}async sendMessage(e){try{if(!e.channel_id||!e.sender_id||!e.content.trim())return{success:!1,error:"Missing required fields"};let{data:r}=await this.supabase.from("chat_channel_members").select("*").eq("channel_id",e.channel_id).eq("user_id",e.sender_id).single();if(!r)return{success:!1,error:"You are not a member of this channel"};let{data:s,error:t}=await this.supabase.from("chat_messages").insert({channel_id:e.channel_id,sender_id:e.sender_id,content:e.content,message_type:e.message_type||"text",file_url:e.file_url}).select().single();if(t)return console.error("Error sending message:",t),{success:!1,error:"Failed to send message"};return{success:!0,data:s}}catch(e){return console.error("Error in sendMessage:",e),{success:!1,error:"Internal server error"}}}async joinChannel(e){try{let{data:r}=await this.supabase.from("chat_channel_members").select("*").eq("channel_id",e.channel_id).eq("user_id",e.user_id).single();if(r)return{success:!1,error:"Already a member of this channel"};let{data:s,error:t}=await this.supabase.from("chat_channel_members").insert({channel_id:e.channel_id,user_id:e.user_id,role:e.role||"member",joined_at:new Date().toISOString()}).select().single();if(t)return console.error("Error joining channel:",t),{success:!1,error:"Failed to join channel"};return{success:!0,data:s}}catch(e){return console.error("Error in joinChannel:",e),{success:!1,error:"Internal server error"}}}async leaveChannel(e,r){try{let{data:s}=await this.supabase.from("chat_channels").select("created_by").eq("id",e).single();if(s?.created_by===r)return{success:!1,error:"Channel creator cannot leave. Transfer ownership first."};let{error:t}=await this.supabase.from("chat_channel_members").delete().eq("channel_id",e).eq("user_id",r);if(t)return console.error("Error leaving channel:",t),{success:!1,error:"Failed to leave channel"};return{success:!0}}catch(e){return console.error("Error in leaveChannel:",e),{success:!1,error:"Internal server error"}}}async getChannelMessages(e,r=50,s=0){try{let{data:t,error:n}=await this.supabase.from("chat_messages").select(`
          *,
          sender:profiles!chat_messages_sender_id_fkey(*)
        `).eq("channel_id",e).order("created_at",{ascending:!1}).range(s,s+r-1);if(n)return console.error("Error fetching channel messages:",n),{success:!1,error:"Failed to fetch messages"};return{success:!0,data:t||[]}}catch(e){return console.error("Error in getChannelMessages:",e),{success:!1,error:"Internal server error"}}}async getUserChannels(e){try{let{data:r,error:s}=await this.supabase.from("chat_channels").select(`
          *,
          members:chat_channel_members(
            *,
            user:profiles!chat_channel_members_user_id_fkey(*)
          )
        `).eq("chat_channel_members.user_id",e).order("created_at",{ascending:!1});if(s)return console.error("Error fetching user channels:",s),{success:!1,error:"Failed to fetch channels"};let t=await Promise.all((r||[]).map(async e=>{let{count:r}=await this.supabase.from("chat_messages").select("*",{count:"exact",head:!0}).eq("channel_id",e.id);return{...e,message_count:r||0}}));return{success:!0,data:t}}catch(e){return console.error("Error in getUserChannels:",e),{success:!1,error:"Internal server error"}}}async getPublicChannels(){try{let{data:e,error:r}=await this.supabase.from("chat_channels").select(`
          *,
          members:chat_channel_members(
            *,
            user:profiles!chat_channel_members_user_id_fkey(*)
          )
        `).neq("channel_type","announcement").order("created_at",{ascending:!1});if(r)return console.error("Error fetching public channels:",r),{success:!1,error:"Failed to fetch channels"};let s=await Promise.all((e||[]).map(async e=>{let{count:r}=await this.supabase.from("chat_messages").select("*",{count:"exact",head:!0}).eq("channel_id",e.id);return{...e,message_count:r||0}}));return{success:!0,data:s}}catch(e){return console.error("Error in getPublicChannels:",e),{success:!1,error:"Internal server error"}}}async deleteChannel(e,r){try{console.log("Channel deletion attempted by:",r);let{data:s}=await this.supabase.from("chat_channels").select("created_by").eq("id",e).single();if(!s)return{success:!1,error:"Channel not found"};if(s.created_by!==r)return{success:!1,error:"Only channel creator can delete channel"};let{error:t}=await this.supabase.from("chat_channels").delete().eq("id",e);if(t)return console.error("Error deleting channel:",t),{success:!1,error:"Failed to delete channel"};return{success:!0}}catch(e){return console.error("Error in deleteChannel:",e),{success:!1,error:"Internal server error"}}}async updateUserLastActive(e){try{await this.supabase.from("profiles").update({last_active:new Date().toISOString()}).eq("id",e)}catch(e){console.error("Error updating user last active:",e)}}async getOnlineUsers(e){try{let{data:r,error:s}=await this.supabase.from("chat_channel_members").select("user_id").eq("channel_id",e);if(s)return{success:!1,error:"Failed to fetch channel members"};if(!r||0===r.length)return{success:!0,data:[]};let t=r.map(e=>e.user_id),n=new Date(Date.now()-3e5).toISOString(),{data:a,error:i}=await this.supabase.from("profiles").select("id, full_name, avatar_url, last_active").in("id",t).gte("last_active",n);if(i)return{success:!1,error:"Failed to fetch online users"};return{success:!0,data:a||[]}}catch(e){return console.error("Error in getOnlineUsers:",e),{success:!1,error:"Internal server error"}}}subscribeToChannel(e,r){return this.supabase.channel(`chat:${e}`).on("postgres_changes",{event:"*",schema:"public",table:"chat_messages",filter:`channel_id=eq.${e}`},r).subscribe()}subscribeToUserPresence(e,r,s){return this.supabase.channel(`presence:${e}`).on("presence",{event:"sync"},s).on("presence",{event:"join"},s).on("presence",{event:"leave"},s).subscribe()}}async function d(e){try{let{channel_id:r,user_id:s,role:t}=await e.json();if(!r||!s)return c.NextResponse.json({error:"Channel ID and user ID are required"},{status:400});let n=new u,a=await n.joinChannel({channel_id:r,user_id:s,role:t});if(!a.success)return c.NextResponse.json({error:a.error},{status:400});return c.NextResponse.json({success:!0,data:a.data})}catch(e){return console.error("Error joining channel:",e),c.NextResponse.json({error:"Internal server error"},{status:500})}}let h=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/messaging/join/route",pathname:"/api/messaging/join",filename:"route",bundlePath:"app/api/messaging/join/route"},resolvedPagePath:"/Users/yatishgrandhe/Downloads/Stem-Spark-main/app/api/messaging/join/route.ts",nextConfigOutput:"",userland:t}),{workAsyncStorage:_,workUnitAsyncStorage:m,serverHooks:p}=h;function f(){return(0,i.patchFetch)({workAsyncStorage:_,workUnitAsyncStorage:m})}},27910:e=>{"use strict";e.exports=require("stream")},28187:()=>{},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{"use strict";e.exports=require("tls")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},50253:()=>{},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},56836:()=>{},60931:e=>{function r(e){var r=Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}r.keys=()=>[],r.resolve=r,r.id=60931,e.exports=r},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78286:(e,r,s)=>{"use strict";s.d(r,{createClient:()=>a});var t=s(72831),n=s(62519);function a(){let e=(0,n.UL)();return(0,t.Ri)(process.env.NEXT_PUBLIC_SUPABASE_URL,process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,{cookies:{getAll:()=>e.getAll(),setAll(r){try{r.forEach(({name:r,value:s,options:t})=>e.set(r,s,t))}catch{}}}})}},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81331:()=>{},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[1703,7893,9600],()=>s(26889));module.exports=t})();